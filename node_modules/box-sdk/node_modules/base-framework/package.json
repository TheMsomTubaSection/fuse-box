{
  "name": "base-framework",
  "description": "An object prototype building framework",
  "keywords": [
    "objects",
    "prototyping",
    "framework"
  ],
  "version": "1.0.1",
  "homepage": "https://CharlotteGore@github.com/CharlotteGore/Base.git",
  "author": {
    "name": "Charlotte Gore",
    "email": "conspiracygore@gmail.com",
    "url": "http://charlottegore.com/"
  },
  "contributors": [
    {
      "name": "Charlotte Gore",
      "email": "conspiracygore@gmail.com",
      "url": "http://charlottegore.com/"
    }
  ],
  "dependencies": {
    "underscore": "1.3.x"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "main": "lib/base",
  "directories": {
    "lib": "lib"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/CharlotteGore/Base.git"
  },
  "engines": {
    "node": "*"
  },
  "readme": "## The summary\n\nBase is a lightweight framework for creating consistent, highly readable, chainable and inheritable object prototypes in Javascript. This git repo is for an NPM module for use with Node. It can be used in the browser so long as you manually satisfy the [Underscore](http://documentcloud.github.com/underscore/) dependency. You're already using Underscore anyway though, right, so no problem, yeah? \n\nShiny!\n\n## The detail\n\nSo, here's some examples and stuff.\n\n### Installing\n\n\tnpm install base-framework\n\n### Example\n\n\t// Require base...\n\tvar base = require('base');\n \n\t// create a base child. Add the default 'init' constructor which is\n\t// executed automatically when the object is invoked, and another \n\t// instance method.\n\n\tvar MyFactory = base.createChild()\n\t\t.AddInstanceMethods({\n\t\t\tinit : function( args ){\n\t\t\t\tthis.args = args;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tspewArgs : function(){\n\t\t\t\tconsole.log(this.args);\n\t\t\t}\n\t\t});\n\n\tvar myInstance = MyFactory({ hello : 'world'}).spewArgs() // outputs {hello : 'world'} to the console\n\nObjects created with `base.createChild()` have a number of static methods which are used to build your factory.\n\n### addInstanceMethods\n\n\tvar Foo = base.createChild();\n\n\tFoo.addInstanceMethods({\n\t\tcomputeSecretOfEverything : function(){\n\t\t\tthis.secret = 42;\n\t\t\treturn this;\n\t\t},\n\t\tgetSecret : function(){\n\t\t\treturn this.secret;\n\t\t}\n\t});\n\n\tBar = Foo();\n\n\tBar.computeSecretOfEverything();\n\tBar.getSecret() === 42 // TRUE\n\nWhen your instance methods return `this` instead of a value, you can chain the methods, jQuery style, instead.\n\n\tBar.computeSecretOfEverything().getSecret();\n\n### addStaticMethods\n\nStatic methods are only available on the object created with `base.createChild()`, not an instance.\n\n\tvar Foo = base.createChild();\n\n\tFoo.addStaticMethods({\n\t\tsecretOfLifeUniverseAndEverything : function(){\n\t\t\treturn 42;\n\t\t}\n\t});\n\n\tFoo.secretOfLifeTheUniverseAndEverything() === 42 // TRUE\n\n### createChild\n\nAny object created with `base.createChild()` also has the `createChild` method, which means you can create a whole bunch of instance and static methods on one child of base, then inherit (and override) those later on.\n\n\tvar Horse = base.createChild()\n\t\t.AddInstanceMethods({\n\t\t\tname : function(){\n\t\t\t\treturn \"Horse\"\n\t\t\t},\n\t\t\tlegs : function(){\n\t\t\t\treturn 4;\n\t\t\t},\n\t\t\tgoFaster : function(){\n\t\t\t\tthis.speed++;\n\t\t\t}\n\t\t});\n\n\tvar Unicorn = Horse.createChild()\n\t\t.AddInstanceMethods({\n\t\t\tname : function(){\n\t\t\t\treturn \"Unicorn\";\n\t\t\t},\n\t\t\tkill : function(){\n\t\t\t\t// extra functionality available to unicorns\n\t\t\t}\n\t\t});\n\n\tvar uni = Unicorn();\n\tvar bill = Horse();\n\n\tuni.legs() === 4 // TRUE\n\tuni.name() === 'Unicorn' // TRUE\n\tuni.goFaster() // exists\n\n\tbill.kill() // doesn't exist\n\n### Test\n\n\tmake test\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/CharlotteGore/Base/issues"
  },
  "_id": "base-framework@1.0.1",
  "dist": {
    "shasum": "a0b507c8f74f15dd4d8e06d3fe62394d9e1df8ff"
  },
  "_from": "base-framework@^1.0.1",
  "_resolved": "https://registry.npmjs.org/base-framework/-/base-framework-1.0.1.tgz"
}
